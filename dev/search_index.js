var documenterSearchIndex = {"docs":
[{"location":"#KLU.jl","page":"KLU.jl","title":"KLU.jl","text":"","category":"section"},{"location":"","page":"KLU.jl","title":"KLU.jl","text":"Documentation for KLU.jl","category":"page"},{"location":"","page":"KLU.jl","title":"KLU.jl","text":"klu","category":"page"},{"location":"#KLU.klu","page":"KLU.jl","title":"KLU.klu","text":"klu(A::SparseMatrixCSC) -> K::KLUFactorization\nklu(n, colptr::Vector{Ti}, rowval::Vector{Ti}, nzval::Vector{Tv}) -> K::KLUFactorization\n\nCompute the LU factorization of a sparse matrix A using KLU.\n\nFor sparse A with real or complex element type, the return type of K is KLUFactorization{Tv, Ti}, with Tv = Float64 or ComplexF64 respectively and Ti is an integer type (Int32 or Int64).\n\nThe individual components of the factorization K can be accessed by indexing:\n\nComponent Description\nL L (lower triangular) part of LU of the diagonal blocks\nU U (upper triangular) part of LU of the diagonal blocks\nF F (upper triangular) part of LU + F, the off-diagonal blocks\np right permutation Vector\nq left permutation Vector\nRs Vector of scaling factors\n\nThe relation between K and A is\n\nK.L * K.U + K.F  == K.Rs` A[K.p, K.q]`\n\nK further supports the following functions:\n\nLinearAlgebra.\\\n\nnote: Note\nklu(A::SparseMatrixCSC) uses the KLU library that is part of SuiteSparse. As this library only supports sparse matrices with Float64 or ComplexF64 elements, lu converts A into a copy that is of type SparseMatrixCSC{Float64} or SparseMatrixCSC{ComplexF64} as appropriate.\n\n\n\n\n\n","category":"function"}]
}
